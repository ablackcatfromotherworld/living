# import requests

# headers = {
#     'accept': '*/*',
#     'accept-language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6,en-GB-oxendict;q=0.5,zh-TW;q=0.4,ja;q=0.3',
#     'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6ImVhYjE5MjEwLWQ4ZjUtNGMxNC05MzYxLWM3ZWRiNmU2ZDA2NyIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSUQiOiI1ZDlhYWE1My01NmY4LTExZjAtOGY0Ny0yYTE5ZDgxZjM4YzgiLCJjbGllbnRJUCI6Ijc5LjEyNy4yMzIuMTk1IiwiY2l0eSI6IkxvcyBBbmdlbGVzIiwicG9zdGFsQ29kZSI6IjkwMDExIiwiY291bnRyeSI6IlVTIiwiZG1hIjo4MDMsImFjdGl2ZVJlZ2lvbiI6IlVTIiwiZGV2aWNlTGF0IjozNC4wMDk5OTgzMjE1MzMyLCJkZXZpY2VMb24iOi0xMTguMjYwMDAyMTM2MjMwNDcsInByZWZlcnJlZExhbmd1YWdlIjoiemgiLCJkZXZpY2VUeXBlIjoid2ViIiwiZGV2aWNlVmVyc2lvbiI6IjEzOC4wLjAiLCJkZXZpY2VNYWtlIjoiY2hyb21lIiwiZGV2aWNlTW9kZWwiOiJ3ZWIiLCJhcHBOYW1lIjoid2ViIiwiYXBwVmVyc2lvbiI6IjkuMTQuMC0yZDI1MWVjOTBlZWI5YzQzOTJlYzExMjg1Mzc5NTM2MTY0YzY4NDg0IiwiY2xpZW50SUQiOiIyYzIyYmI3Yy1mMzUzLTQxNjEtYjk5YS1kYmZjNGFkNDhjNDAiLCJjbUF1ZGllbmNlSUQiOiIiLCJpc0NsaWVudEROVCI6ZmFsc2UsInVzZXJJRCI6IjY4NjQ5YTM5ZGU2MWVmYzNhNDJlNzhiMyIsInVzZXJCcmFuZCI6InBsdXRvdHYiLCJsb2dMZXZlbCI6IkRFRkFVTFQiLCJ0aW1lWm9uZSI6IkFtZXJpY2EvTG9zX0FuZ2VsZXMiLCJzZXJ2ZXJTaWRlQWRzIjpmYWxzZSwiZTJlQmVhY29ucyI6ZmFsc2UsImZlYXR1cmVzIjp7ImFkTG9hZCI6eyJjb2hvcnQiOiIifSwibXVsdGlBdWRpbyI6eyJlbmFibGVkIjp0cnVlfSwibXVsdGlQb2RBZHMiOnsiZW5hYmxlZCI6dHJ1ZX0sInNlYXJjaEFQSSI6eyJtYXRjaEV4YWN0SW5QaHJhc2VFbmFibGVkIjp0cnVlLCJtYXRjaEluQWN0b3JzQm9vc3QiOjI1LCJtYXRjaEluQWN0b3JzRWRpdERpc3RhbmNlIjoiQVVUTzo1LDExIiwibWF0Y2hJbkFjdG9yc0VuYWJsZWQiOnRydWUsIm1hdGNoSW5EaXJlY3RvcnNCb29zdCI6MjUsIm1hdGNoSW5EaXJlY3RvcnNFZGl0RGlzdGFuY2UiOiJBVVRPOjUsMTEiLCJtYXRjaEluRGlyZWN0b3JzRW5hYmxlZCI6dHJ1ZSwibmV4dXNUaW1lb3V0TXMiOjUwMCwicXVlcnlTeW5vbnltc0VuYWJsZWQiOnRydWUsInF1ZXJ5VmVyc2lvbiI6Imh5YnJpZCIsInNlYXJjaFByb3h5RW5oYW5jZW1lbnQiOmZhbHNlLCJ0aXRsZUF2YWlsYWJpbGl0eURldGVybWluYXRpb24iOmZhbHNlfX0sImVudGl0bGVtZW50cyI6WyJSZWdpc3RlcmVkIl0sImZtc1BhcmFtcyI6eyJmd1ZjSUQyIjoiWGk2Mzk1V1R5RXRmXzVnUmxjOVM3Wmxjc3FkdnlKRmpDbnZRX0h1SmNuNEphbEN4TWtEQ2cwOWF5VnNNY2FQdXZNREhieSIsImZ3VmNJRDJDb3BwYSI6IjJjMjJiYjdjLWYzNTMtNDE2MS1iOTlhLWRiZmM0YWQ0OGM0MCIsImN1c3RvbVBhcmFtcyI6eyJmbXNfbGl2ZXJhbXBfaWRsIjoiIiwiZm1zX2VtYWlsaGFzaCI6ImZmOGYyMDhlNDQ0ZTFiZGVjYjg5OGFiMTE4ZjMzMjcxZDUxMjY4MzJkNmU4ZDU0OTEyNTNlZjg1MjNhNTM3OWIiLCJmbXNfc3Vic2NyaWJlcmlkIjoiNjg2NDlhMzlkZTYxZWZjM2E0MmU3OGIzIiwiZm1zX2lmYSI6IiIsImZtc19pZGZ2IjoiIiwiZm1zX3VzZXJpZCI6IjJjMjJiYjdjLWYzNTMtNDE2MS1iOTlhLWRiZmM0YWQ0OGM0MCIsImZtc192Y2lkMnR5cGUiOiJsaXZlcmFtcCIsImZtc19yYW1wX2lkIjoiWGk2Mzk1V1R5RXRmXzVnUmxjOVM3Wmxjc3FkdnlKRmpDbnZRX0h1SmNuNEphbEN4TWtEQ2cwOWF5VnNNY2FQdXZNREhieSIsImZtc19oaF9yYW1wX2lkIjoiVU5NQVRDSEVEIiwiZm1zX2JpZGlkdHlwZSI6IjEwNDAsMTA1MCwxMDMwLDEwMTAsMTA3MCwxMDgwIiwiX2Z3XzNQX1VJRCI6IklETDpBbUJaNllwTEZoVVNJa0F0R2t3S21SbnVwWldOQnZVelhIVjJPeUNHSlZGOXdFcHlxSmN2WDRQay02UDQxamthOW1oREZ0M2Vienk1eXFZaGFHZEo5Q21OZG00b0xVUWlSN2QyRldCN2tYYmZvRmlFRHFkR2hpdlhzWWZYNDFfXy0yVDRLd0tobWJCV2o4T3JNMlRfVXJ4TTNpVkhaUGNBMXNQMm1WZi02Vlh4RnU2NVZpeWx2NmUyT0NEdDgxR0xPQU1YbnZWUixQQUlSSUQ6QTNhRFVDeG8vOVRiZXZ1ZU9Cc1BhRis2eGxvL0ROemZrMUdSWUdnK3lvaFUsY29ubmVjdGlkOkhKTWthX19ENWRadjVtNDlhNWt0VUJfM2k1SFNOV29KNEhTd1NjRkRXdW1sU1Y1MWo4aFhXV0IzR3l1VVY1UkNCS1ItMzVselNpWnk0R3daUmJXV0xRLFVJRDI6QTRBQUFCS2FtVTNvWlo5TGhRVW9Kd0lEMTZSVWlpNVVwbXFxUERLbE43YmxkS3pKenduYjlaZGFEY1Q1MkhRTW1DdGVNeXI0LTh6bzdsNzJwWHVydnJnSzE3LU90RExlT01HLWZuVm42Si1YX2luRm12WU9tQjRjSlVoMzdjWWg3b211MTFVa1BPaDFqNzNDOGRzN29ELXZGdy1Xc3FkS0hCQ1BBR29ORWNqSEpnZ2hxN3NRQjIxTXFmR1lyTzJMcS1xRVNHclR0a0dIUXUwbllKSHpmTUV4T2csVklBTlRQOmIwZGFkNjc3NGViZGJkYTRhYWNmNmM1NzJkYWJmZDZmMTA4ZDFlZDMxZjYxMzk2NWQ1MDlhMWI3YzQ2ZTExNDksVElOVUlUSTo5YzM3ZWJhYjU4MDBiMTJkMTQ5MTAyMThkMWUwZDhiZTQyYWY2MjJlYWJhM2YyYzQzZGIxMDM5NDU5OTUyYjAwIiwiZm1zX3J1bGVpZCI6IjEwMDAwIn19LCJkcm0iOnsibmFtZSI6IndpZGV2aW5lIiwibGV2ZWwiOiJMMyJ9LCJhZFBvZFBhcmFtcyI6eyJhZ2UiOjIsImdlbmRlciI6MH0sImlzcyI6ImJvb3QucGx1dG8udHYiLCJzdWIiOiJwcmk6djE6cGx1dG86dXNlcnMtdjE6VVM6TW1NeU1tSmlOMk10WmpNMU15MDBNVFl4TFdJNU9XRXRaR0ptWXpSaFpEUTRZelF3OjY4NjQ5YTM5ZGU2MWVmYzNhNDJlNzhiMyIsImF1ZCI6IioucGx1dG8udHYiLCJleHAiOjE3NTE1MTQ5MjQsImlhdCI6MTc1MTQyODUyNCwianRpIjoiNTg2MDJmODEtNmI3Zi00ZmM2LThmN2UtMDY2MjAxYjI3YThlIn0.yH9PyhszzVJ7wh2ySE-U2HBNc8QFY3B-rqpxyzuhHe4',
#     'cache-control': 'no-cache',
#     'origin': 'https://pluto.tv',
#     'pragma': 'no-cache',
#     'priority': 'u=1, i',
#     'referer': 'https://pluto.tv/',
#     'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
#     'sec-ch-ua-mobile': '?0',
#     'sec-ch-ua-platform': '"Windows"',
#     'sec-fetch-dest': 'empty',
#     'sec-fetch-mode': 'cors',
#     'sec-fetch-site': 'same-site',
#     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
# }

# def get_params(offset: int, page: int):
#     return {
#         'offset': str(offset),
#         'page': str(page),
#     }



# response = requests.get(
#     'https://service-vod.clusters.pluto.tv/v4/vod/categories/6018833064d99100075a1e8a/items',
#     params=get_params(offset=1000, page=1),
#     headers=headers,
# )

# print(len(response.json().get('items')))

# with open('pluto.txt', 'w', encoding='utf-8') as f:
#     f.write(response.text)



# import requests

# headers = {
#     'accept': '*/*',
#     'accept-language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6,en-GB-oxendict;q=0.5,zh-TW;q=0.4,ja;q=0.3',
#     'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6ImVhYjE5MjEwLWQ4ZjUtNGMxNC05MzYxLWM3ZWRiNmU2ZDA2NyIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSUQiOiIzYWJmOWNjNi01NzE2LTExZjAtOTU4Yy03ZTAxZDI4NjY3OWUiLCJjbGllbnRJUCI6Ijc5LjEyNy4yMzIuMTk1IiwiY2l0eSI6IkxvcyBBbmdlbGVzIiwicG9zdGFsQ29kZSI6IjkwMDExIiwiY291bnRyeSI6IlVTIiwiZG1hIjo4MDMsImFjdGl2ZVJlZ2lvbiI6IlVTIiwiZGV2aWNlTGF0IjozNC4wMDk5OTgzMjE1MzMyLCJkZXZpY2VMb24iOi0xMTguMjYwMDAyMTM2MjMwNDcsInByZWZlcnJlZExhbmd1YWdlIjoiemgiLCJkZXZpY2VUeXBlIjoid2ViIiwiZGV2aWNlVmVyc2lvbiI6IjEzOC4wLjAiLCJkZXZpY2VNYWtlIjoiY2hyb21lIiwiZGV2aWNlTW9kZWwiOiJ3ZWIiLCJhcHBOYW1lIjoid2ViIiwiYXBwVmVyc2lvbiI6IjkuMTQuMC0yZDI1MWVjOTBlZWI5YzQzOTJlYzExMjg1Mzc5NTM2MTY0YzY4NDg0IiwiY2xpZW50SUQiOiIyYzIyYmI3Yy1mMzUzLTQxNjEtYjk5YS1kYmZjNGFkNDhjNDAiLCJjbUF1ZGllbmNlSUQiOiIiLCJpc0NsaWVudEROVCI6ZmFsc2UsInVzZXJJRCI6IjY4NjQ5YTM5ZGU2MWVmYzNhNDJlNzhiMyIsImxvZ0xldmVsIjoiREVGQVVMVCIsInRpbWVab25lIjoiQW1lcmljYS9Mb3NfQW5nZWxlcyIsInNlcnZlclNpZGVBZHMiOmZhbHNlLCJlMmVCZWFjb25zIjpmYWxzZSwiZmVhdHVyZXMiOnsiYWRMb2FkIjp7ImNvaG9ydCI6IiJ9LCJtdWx0aUF1ZGlvIjp7ImVuYWJsZWQiOnRydWV9LCJtdWx0aVBvZEFkcyI6eyJlbmFibGVkIjp0cnVlfSwic2VhcmNoQVBJIjp7Im1hdGNoRXhhY3RJblBocmFzZUVuYWJsZWQiOnRydWUsIm1hdGNoSW5BY3RvcnNCb29zdCI6MjUsIm1hdGNoSW5BY3RvcnNFZGl0RGlzdGFuY2UiOiJBVVRPOjUsMTEiLCJtYXRjaEluQWN0b3JzRW5hYmxlZCI6dHJ1ZSwibWF0Y2hJbkRpcmVjdG9yc0Jvb3N0IjoyNSwibWF0Y2hJbkRpcmVjdG9yc0VkaXREaXN0YW5jZSI6IkFVVE86NSwxMSIsIm1hdGNoSW5EaXJlY3RvcnNFbmFibGVkIjp0cnVlLCJuZXh1c1RpbWVvdXRNcyI6NTAwLCJxdWVyeVN5bm9ueW1zRW5hYmxlZCI6dHJ1ZSwicXVlcnlWZXJzaW9uIjoiaHlicmlkIiwic2VhcmNoUHJveHlFbmhhbmNlbWVudCI6ZmFsc2UsInRpdGxlQXZhaWxhYmlsaXR5RGV0ZXJtaW5hdGlvbiI6ZmFsc2V9fSwiZW50aXRsZW1lbnRzIjpbIlJlZ2lzdGVyZWQiXSwiZm1zUGFyYW1zIjp7ImZ3VmNJRDIiOiJYaTYzOTVXVHlFdGZfNWdSbGM5UzdabGNzcWR2eUpGakNudlFfSHVKY240SmFsQ3hNa0RDZzA5YXlWc01jYVB1dk1ESGJ5IiwiZndWY0lEMkNvcHBhIjoiMmMyMmJiN2MtZjM1My00MTYxLWI5OWEtZGJmYzRhZDQ4YzQwIiwiY3VzdG9tUGFyYW1zIjp7ImZtc19saXZlcmFtcF9pZGwiOiIiLCJmbXNfZW1haWxoYXNoIjoiZmY4ZjIwOGU0NDRlMWJkZWNiODk4YWIxMThmMzMyNzFkNTEyNjgzMmQ2ZThkNTQ5MTI1M2VmODUyM2E1Mzc5YiIsImZtc19zdWJzY3JpYmVyaWQiOiI2ODY0OWEzOWRlNjFlZmMzYTQyZTc4YjMiLCJmbXNfaWZhIjoiIiwiZm1zX2lkZnYiOiIiLCJmbXNfdXNlcmlkIjoiMmMyMmJiN2MtZjM1My00MTYxLWI5OWEtZGJmYzRhZDQ4YzQwIiwiZm1zX3ZjaWQydHlwZSI6ImxpdmVyYW1wIiwiZm1zX3JhbXBfaWQiOiJYaTYzOTVXVHlFdGZfNWdSbGM5UzdabGNzcWR2eUpGakNudlFfSHVKY240SmFsQ3hNa0RDZzA5YXlWc01jYVB1dk1ESGJ5IiwiZm1zX2hoX3JhbXBfaWQiOiJVTk1BVENIRUQiLCJmbXNfYmlkaWR0eXBlIjoiMTA0MCwxMDUwLDEwMzAsMTAxMCwxMDcwLDEwODAiLCJfZndfM1BfVUlEIjoiSURMOkFtQlo2WXBMRmhVU0lrQXRHa3dLbVJudXBaV05CdlV6WEhWMk95Q0dKVkY5d0VweXFKY3ZYNFBrLTZQNDFqa2E5bWhERnQzZWJ6eTV5cVloYUdkSjlDbU5kbTRvTFVRaVI3ZDJGV0I3a1hiZm9GaUVEcWRHaGl2WHNZZlg0MV9fLTJUNEt3S2htYkJXajhPck0yVF9VcnhNM2lWSFpQY0Exc1AybVZmLTZWWHhGdTY1Vml5bHY2ZTJPQ0R0ODFHTE9BTVhudlZSLFBBSVJJRDpBM2FEVUN4by85VGJldnVlT0JzUGFGKzZ4bG8vRE56ZmsxR1JZR2creW9oVSxjb25uZWN0aWQ6SEpNa2FfX0Q1ZFp2NW00OWE1a3RVQl8zaTVIU05Xb0o0SFN3U2NGRFd1bWxTVjUxajhoWFdXQjNHeXVVVjVSQ0JLUi0zNWx6U2laeTRHd1pSYldXTFEsVUlEMjpBNEFBQUJLYW1VM29aWjlMaFFVb0p3SUQxNlJVaWk1VXBtcXFQREtsTjdibGRLekp6d25iOVpkYURjVDUySFFNbUN0ZU15cjQtOHpvN2w3MnBYdXJ2cmdLMTctT3RETGVPTUctZm5WbjZKLVhfaW5GbXZZT21CNGNKVWgzN2NZaDdvbXUxMVVrUE9oMWo3M0M4ZHM3b0QtdkZ3LVdzcWRLSEJDUEFHb05FY2pISmdnaHE3c1FCMjFNcWZHWXJPMkxxLXFFU0dyVHRrR0hRdTBuWUpIemZNRXhPZyxWSUFOVFA6YjBkYWQ2Nzc0ZWJkYmRhNGFhY2Y2YzU3MmRhYmZkNmYxMDhkMWVkMzFmNjEzOTY1ZDUwOWExYjdjNDZlMTE0OSxUSU5VSVRJOjljMzdlYmFiNTgwMGIxMmQxNDkxMDIxOGQxZTBkOGJlNDJhZjYyMmVhYmEzZjJjNDNkYjEwMzk0NTk5NTJiMDAiLCJmbXNfcnVsZWlkIjoiMTAwMDAifX0sImRybSI6eyJuYW1lIjoid2lkZXZpbmUiLCJsZXZlbCI6IkwzIn0sImFkUG9kUGFyYW1zIjp7ImFnZSI6MiwiZ2VuZGVyIjowfSwiaXNzIjoiYm9vdC5wbHV0by50diIsInN1YiI6InByaTp2MTpwbHV0bzp1c2Vycy12MTpVUzpNbU15TW1KaU4yTXRaak0xTXkwME1UWXhMV0k1T1dFdFpHSm1ZelJoWkRRNFl6UXc6Njg2NDlhMzlkZTYxZWZjM2E0MmU3OGIzIiwiYXVkIjoiKi5wbHV0by50diIsImV4cCI6MTc1MTUyNzc3NCwiaWF0IjoxNzUxNDQxMzc0LCJqdGkiOiIzMTkyMmI5Zi1jODY2LTRkZDgtOGM3Ni1hNGU4MzQ5YzA2NDIifQ.alGdOpEbm7Ar5slDOcegCApwYP3BuuQzFcHljvQf-Ao',
#     'cache-control': 'no-cache',
#     'origin': 'https://pluto.tv',
#     'pragma': 'no-cache',
#     'priority': 'u=1, i',
#     'referer': 'https://pluto.tv/',
#     'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
#     'sec-ch-ua-mobile': '?0',
#     'sec-ch-ua-platform': '"Windows"',
#     'sec-fetch-dest': 'empty',
#     'sec-fetch-mode': 'cors',
#     'sec-fetch-site': 'same-site',
#     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
# }

# params = {
#     'limit': '100',
#     'offset': '100',
# }

# response = requests.get('https://service-watchlist-ga.prd.pluto.tv/v1/watchlist', params=params, headers=headers)
# print(response.text)

import requests
import json
from pathlib import Path

headers = {
    'accept': '*/*',
    'accept-language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6,en-GB-oxendict;q=0.5,zh-TW;q=0.4,ja;q=0.3',
    'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6IjRmZGE2YjE2LWFjYzItNGVmYS04ZjY5LTE2ZjQwMGJmNzdmMCIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSUQiOiJjM2M5NDg3Ni01YzZhLTExZjAtODNkYy1kZTE0YmE5MjkwNDIiLCJjbGllbnRJUCI6IjM4LjE2NS4yLjM5IiwiY2l0eSI6IkxvcyBBbmdlbGVzIiwicG9zdGFsQ29kZSI6IjkwMDExIiwiY291bnRyeSI6IlVTIiwiZG1hIjo4MDMsImFjdGl2ZVJlZ2lvbiI6IlVTIiwiZGV2aWNlTGF0IjozNC4wMDk5OTgzMjE1MzMyLCJkZXZpY2VMb24iOi0xMTguMjYwMDAyMTM2MjMwNDcsInByZWZlcnJlZExhbmd1YWdlIjoiemgiLCJkZXZpY2VUeXBlIjoid2ViIiwiZGV2aWNlVmVyc2lvbiI6IjEzOC4wLjAiLCJkZXZpY2VNYWtlIjoiY2hyb21lIiwiZGV2aWNlTW9kZWwiOiJ3ZWIiLCJhcHBOYW1lIjoid2ViIiwiYXBwVmVyc2lvbiI6IjkuMTQuMS1jYTYwOThiYjVkMWYyZGI2OGMyY2NjY2Y2MDgzNDZmMjE2NTFmMDAzIiwiY2xpZW50SUQiOiIyYzIyYmI3Yy1mMzUzLTQxNjEtYjk5YS1kYmZjNGFkNDhjNDAiLCJjbUF1ZGllbmNlSUQiOiIiLCJpc0NsaWVudEROVCI6ZmFsc2UsInVzZXJJRCI6IjY4NjQ5YTM5ZGU2MWVmYzNhNDJlNzhiMyIsInVzZXJCcmFuZCI6InBsdXRvdHYiLCJsb2dMZXZlbCI6IkRFRkFVTFQiLCJ0aW1lWm9uZSI6IkFtZXJpY2EvTG9zX0FuZ2VsZXMiLCJzZXJ2ZXJTaWRlQWRzIjpmYWxzZSwiZTJlQmVhY29ucyI6ZmFsc2UsImZlYXR1cmVzIjp7ImFkTG9hZCI6eyJjb2hvcnQiOiIifSwibXVsdGlBdWRpbyI6eyJlbmFibGVkIjp0cnVlfSwibXVsdGlQb2RBZHMiOnsiZW5hYmxlZCI6dHJ1ZX0sInNlYXJjaEFQSSI6eyJtYXRjaEV4YWN0SW5QaHJhc2VFbmFibGVkIjp0cnVlLCJtYXRjaEluQWN0b3JzQm9vc3QiOjI1LCJtYXRjaEluQWN0b3JzRWRpdERpc3RhbmNlIjoiQVVUTzo1LDExIiwibWF0Y2hJbkFjdG9yc0VuYWJsZWQiOnRydWUsIm1hdGNoSW5EaXJlY3RvcnNCb29zdCI6MjUsIm1hdGNoSW5EaXJlY3RvcnNFZGl0RGlzdGFuY2UiOiJBVVRPOjUsMTEiLCJtYXRjaEluRGlyZWN0b3JzRW5hYmxlZCI6dHJ1ZSwibmV4dXNUaW1lb3V0TXMiOjUwMCwicXVlcnlTeW5vbnltc0VuYWJsZWQiOnRydWUsInF1ZXJ5VmVyc2lvbiI6Imh5YnJpZCIsInNlYXJjaFByb3h5RW5oYW5jZW1lbnQiOmZhbHNlLCJ0aXRsZUF2YWlsYWJpbGl0eURldGVybWluYXRpb24iOmZhbHNlfX0sImVudGl0bGVtZW50cyI6WyJSZWdpc3RlcmVkIl0sImZtc1BhcmFtcyI6eyJmd1ZjSUQyIjoiZmY4ZjIwOGU0NDRlMWJkZWNiODk4YWIxMThmMzMyNzFkNTEyNjgzMmQ2ZThkNTQ5MTI1M2VmODUyM2E1Mzc5YiIsImZ3VmNJRDJDb3BwYSI6IjJjMjJiYjdjLWYzNTMtNDE2MS1iOTlhLWRiZmM0YWQ0OGM0MCIsImN1c3RvbVBhcmFtcyI6eyJmbXNfbGl2ZXJhbXBfaWRsIjoiIiwiZm1zX2VtYWlsaGFzaCI6ImZmOGYyMDhlNDQ0ZTFiZGVjYjg5OGFiMTE4ZjMzMjcxZDUxMjY4MzJkNmU4ZDU0OTEyNTNlZjg1MjNhNTM3OWIiLCJmbXNfc3Vic2NyaWJlcmlkIjoiNjg2NDlhMzlkZTYxZWZjM2E0MmU3OGIzIiwiZm1zX2lmYSI6IiIsImZtc19pZGZ2IjoiIiwiZm1zX3VzZXJpZCI6IjJjMjJiYjdjLWYzNTMtNDE2MS1iOTlhLWRiZmM0YWQ0OGM0MCIsImZtc192Y2lkMnR5cGUiOiJlbWFpbGhhc2giLCJmbXNfcmFtcF9pZCI6IiIsImZtc19oaF9yYW1wX2lkIjoiIiwiZm1zX2JpZGlkdHlwZSI6IjEwNDAsMTA1MCwxMDMwLDEwMTAsMTA3MCwxMDgwIiwiX2Z3XzNQX1VJRCI6IklETDpBbUJaNllwTEZoVVNJa0F0R2t3S21SbnVwWldOQnZVelhIVjJPeUNHSlZGOXdFcHlxSmN2WDRQay02UDQxamthOW1oREZ0M2Vienk1eXFZaGFHZEo5Q21OZG00b0xVUWlSN2QyRldCN2tYYmZvRmlFRHFkR2hpdlhzWWZYNDFfXy0yVDRLd0tobWJCV2o4T3JNMlRfVXJ4TTNpVkhaUGNBMXNQMm1WZi02Vlh4RnU2NVZpeWx2NmUyT0NEdDgxR0xPQU1YbnZWUixQQUlSSUQ6QTNhRFVDeG8vOVRiZXZ1ZU9Cc1BhRis2eGxvL0ROemZrMUdSWUdnK3lvaFUsY29ubmVjdGlkOlY4amdOekNTWEhFbDNJNlZRRXRLOXpjMjA4LXRYem8tWFE3VlVFWkYtTWpmekJmNXI2aDk3cWRra1YwWDV3Vi1wbURZd2dmcWZPQU5yQ0xkenBINFVnLFVJRDI6QTRBQUFCS3JGQ01lcnEwaElFZ0M1NENMc3ZXUVRabEFOTm12QWUweGlVblBaX055OWdCOWRqb3dab3JETkZjbzJfdkRsV3BvRXJfbTU0Q19zemh2RFVKbzNpblR1X285ZHg5ODdUOFJfVzI5bnVhY1RYVG5IT20xSXBLZkJSNFBLQ3hMWUM2S25JT0dZa1pkTjFrcm1TazY3VHRXcWU2WHExRlY1Qm9sSXVueDJqOXUxclRwWHNHWm5TYkVpMFVOMFJyQXlHa0lSM1QySjNvMG1jeEhDMUViR0EsVklBTlRQOmIwZGFkNjc3NGViZGJkYTRhYWNmNmM1NzJkYWJmZDZmMTA4ZDFlZDMxZjYxMzk2NWQ1MDlhMWI3YzQ2ZTExNDksVElOVUlUSTo5YzM3ZWJhYjU4MDBiMTJkMTQ5MTAyMThkMWUwZDhiZTQyYWY2MjJlYWJhM2YyYzQzZGIxMDM5NDU5OTUyYjAwIiwiZm1zX3J1bGVpZCI6IjEwMDAwIn19LCJkcm0iOnsibmFtZSI6IndpZGV2aW5lIiwibGV2ZWwiOiJMMyJ9LCJhZFBvZFBhcmFtcyI6eyJhZ2UiOjIsImdlbmRlciI6MH0sImlzcyI6ImJvb3QucGx1dG8udHYiLCJzdWIiOiJwcmk6djE6cGx1dG86dXNlcnMtdjE6VVM6TW1NeU1tSmlOMk10WmpNMU15MDBNVFl4TFdJNU9XRXRaR0ptWXpSaFpEUTRZelF3OjY4NjQ5YTM5ZGU2MWVmYzNhNDJlNzhiMyIsImF1ZCI6IioucGx1dG8udHYiLCJleHAiOjE3NTIxMTM4MTMsImlhdCI6MTc1MjAyNzQxMywianRpIjoiMTUwZjc2YzMtNzYzNC00ZDdiLWJlZTYtNjZkMjRmZGUwYmEwIn0.Zc2UAs0WKRhG46q_1Fh01emZGsQIpKs3aK7lJv0k-8M',
    'cache-control': 'no-cache',
    'origin': 'https://pluto.tv',
    'pragma': 'no-cache',
    'priority': 'u=1, i',
    'referer': 'https://pluto.tv/',
    'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-site',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
}
path = Path(__file__).parent

response = requests.get('https://service-channels.clusters.pluto.tv/v2/guide/categories', headers=headers)
data = response.json().get('data')
with open(path / 'categories.json', 'w', encoding='utf-8') as f:
    f.write(json.dumps(data))

